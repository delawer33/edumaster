"""added table courses and user_course

Revision ID: 585392a27761
Revises: 9a6d7122a234
Create Date: 2025-05-17 16:55:30.870249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '585392a27761'
down_revision: Union[str, None] = '9a6d7122a234'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # my code: create user_role_enum
    user_role_enum = postgresql.ENUM('student', 'teacher', 'admin', name='user_role_enum')
    user_role_enum.create(op.get_bind())

    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('status', postgresql.ENUM('draft', 'published', 'archived', name='course_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_courses_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_courses'))
    )
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_table('user_course',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('fk_user_course_course_id_courses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_course_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'course_id', name=op.f('pk_user_course'))
    )
    op.add_column('users', sa.Column('first_name', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('role', user_role_enum, server_default='student', nullable=False))
    op.drop_column('users', 'full_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('users', 'role')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_table('user_course')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_table('courses')

    # my code: delete user_role_enum
    postgresql.ENUM(name='user_role_enum').drop(op.get_bind())
    postgresql.ENUM(name='course_status_enum').drop(op.get_bind())


    # ### end Alembic commands ###
